// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model Task {
  id Int @id @default(autoincrement())
  page Int
  points Int
  text String
  groups GroupTask[]
}

model Group {
  id String @id @default(cuid())
  name String
  code String
  tasks GroupTask[]
  accounts Account[]
}

model Account {
  id                 String  @id @default(cuid())
  userId             String  @map("user_id")
  type               String
  provider           String
  providerAccountId  String  @map("provider_account_id")
  refresh_token      String? @db.Text
  access_token       String? @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String? @db.Text
  session_state      String?

  group Group @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model GroupTask {
  id Int @id @default(autoincrement())
  status Status @default(started)
  groupId String
  taskId Int
  task Task @relation(fields: [taskId], references: [id])
  group Group @relation(fields: [groupId], references: [id])
}

enum Status {
  started
  sent
  completed
}